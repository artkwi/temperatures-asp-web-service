//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace serwisWEBasp.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.WebServicePISSoap")]
    public interface WebServicePISSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelsjuszToFahrenheit", ReplyAction="*")]
        double CelsjuszToFahrenheit(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelsjuszToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CelsjuszToFahrenheitAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToCelsjusz", ReplyAction="*")]
        double FahrenheitToCelsjusz(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToCelsjusz", ReplyAction="*")]
        System.Threading.Tasks.Task<double> FahrenheitToCelsjuszAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelwinToCelsjusz", ReplyAction="*")]
        double KelwinToCelsjusz(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelwinToCelsjusz", ReplyAction="*")]
        System.Threading.Tasks.Task<double> KelwinToCelsjuszAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelsjuszToKelwin", ReplyAction="*")]
        double CelsjuszToKelwin(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelsjuszToKelwin", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CelsjuszToKelwinAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToKelwin", ReplyAction="*")]
        double FahrenheitToKelwin(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToKelwin", ReplyAction="*")]
        System.Threading.Tasks.Task<double> FahrenheitToKelwinAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelwinToFahrenheit", ReplyAction="*")]
        double KelwinToFahrenheit(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelwinToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<double> KelwinToFahrenheitAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subtract", ReplyAction="*")]
        float Subtract(float A, float B);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subtract", ReplyAction="*")]
        System.Threading.Tasks.Task<float> SubtractAsync(float A, float B);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServicePISSoapChannel : serwisWEBasp.ServiceReference.WebServicePISSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServicePISSoapClient : System.ServiceModel.ClientBase<serwisWEBasp.ServiceReference.WebServicePISSoap>, serwisWEBasp.ServiceReference.WebServicePISSoap {
        
        public WebServicePISSoapClient() {
        }
        
        public WebServicePISSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServicePISSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServicePISSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServicePISSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CelsjuszToFahrenheit(double a) {
            return base.Channel.CelsjuszToFahrenheit(a);
        }
        
        public System.Threading.Tasks.Task<double> CelsjuszToFahrenheitAsync(double a) {
            return base.Channel.CelsjuszToFahrenheitAsync(a);
        }
        
        public double FahrenheitToCelsjusz(double a) {
            return base.Channel.FahrenheitToCelsjusz(a);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToCelsjuszAsync(double a) {
            return base.Channel.FahrenheitToCelsjuszAsync(a);
        }
        
        public double KelwinToCelsjusz(double a) {
            return base.Channel.KelwinToCelsjusz(a);
        }
        
        public System.Threading.Tasks.Task<double> KelwinToCelsjuszAsync(double a) {
            return base.Channel.KelwinToCelsjuszAsync(a);
        }
        
        public double CelsjuszToKelwin(double a) {
            return base.Channel.CelsjuszToKelwin(a);
        }
        
        public System.Threading.Tasks.Task<double> CelsjuszToKelwinAsync(double a) {
            return base.Channel.CelsjuszToKelwinAsync(a);
        }
        
        public double FahrenheitToKelwin(double a) {
            return base.Channel.FahrenheitToKelwin(a);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToKelwinAsync(double a) {
            return base.Channel.FahrenheitToKelwinAsync(a);
        }
        
        public double KelwinToFahrenheit(double a) {
            return base.Channel.KelwinToFahrenheit(a);
        }
        
        public System.Threading.Tasks.Task<double> KelwinToFahrenheitAsync(double a) {
            return base.Channel.KelwinToFahrenheitAsync(a);
        }
        
        public float Subtract(float A, float B) {
            return base.Channel.Subtract(A, B);
        }
        
        public System.Threading.Tasks.Task<float> SubtractAsync(float A, float B) {
            return base.Channel.SubtractAsync(A, B);
        }
    }
}
